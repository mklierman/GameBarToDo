<Page
    x:Class="GameBarToDo.Views.ListItemsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:lm="using:GameBarToDo.Models"
    xmlns:local="using:GameBarToDo.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:lm="using:GameBarToDo.Models"
    MaxWidth="400"
    MaxHeight="600"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    mc:Ignorable="d">
    

    <Grid x:Name="ContentArea" Margin="{StaticResource MediumLeftRightMargin}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Horizontal">
                <Button Command="{x:Bind ViewModel.BackCommand}">
                    <SymbolIcon Symbol="Back" />
                </Button>
                <TextBlock Text="{x:Bind ViewModel.ListHeader}" />
            </StackPanel>

            <ListView
                Grid.Row="1"
                ItemsSource="{x:Bind ViewModel.ListItems, Mode=TwoWay}"
                SelectedItem="{x:Bind ViewModel.SelectedList, Mode=TwoWay}">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="lm:ListItemModel">
                        <Grid Background="#FF1B1B1B" BorderBrush="#FF303030" BorderThickness="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <!--XAML Elements-->
                            <CheckBox Grid.Column="0" MinWidth="5" Margin="8, 0, 0, 0" IsChecked="{x:Bind is_complete, Mode=TwoWay}"/>
                            <!--<SymbolIcon Grid.Column="0" Margin="8, 0, 0, 0" Symbol="Add" />-->
                            <TextBlock Grid.Column="1" Padding="5, 5, 0, 5" Text="{x:Bind item_name}" />
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>

                <!--Only way to make text block stretch-->
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>

            <Grid Grid.Row="2" Margin="8, 8, 8, 8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBox
                    Grid.Column="0"
                    MaxHeight="33"
                    AcceptsReturn="True"
                    PlaceholderText="New List"
                    Text="{x:Bind ViewModel.NewListItemName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Button Grid.Column="1">
                    <SymbolIcon Symbol="Add" />
                </Button>

            </Grid>
        </Grid>
    </Grid>
</Page>
