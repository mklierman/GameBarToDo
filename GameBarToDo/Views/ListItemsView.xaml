<Page
    x:Class="GameBarToDo.Views.ListItemsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:GameBarToDo.Helpers"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:lm="using:GameBarToDo.Models"
    xmlns:local="using:GameBarToDo.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:GameBarToDo.ViewModels"
    MaxWidth="400"
    MaxHeight="600"
    mc:Ignorable="d">
    <Grid>
        <Grid x:Name="BackgroundGrid" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" />
        <Grid x:Name="ContentArea" Margin="{StaticResource MediumLeftRightMargin}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <Button Margin="8,4,4,4" Command="{x:Bind ViewModel.BackCommand}">
                        <SymbolIcon Symbol="Back" />
                    </Button>
                    <TextBlock
                        Margin="8"
                        FontSize="16"
                        FontWeight="Bold"
                        Text="{x:Bind ViewModel.ListHeader}"
                        TextAlignment="Center" />
                </StackPanel>
                <ListView
                    Grid.Row="1"
                    ItemsSource="{x:Bind ViewModel.Tasks, Mode=TwoWay}"
                    SelectedItem="{x:Bind ViewModel.SelectedTask, Mode=TwoWay}">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="lm:TaskModel">
                            <Grid
                                Background="{ThemeResource ButtonBackgroundThemeBrush}"
                                BorderBrush="#FF303030"
                                BorderThickness="1">
                                <FlyoutBase.AttachedFlyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem
                                            Command="{x:Bind vm:TaskViewModel.DeleteTaskCommand}"
                                            CommandParameter="{Binding}"
                                            Text="Delete Task">
                                            <MenuFlyoutItem.Icon>
                                                <SymbolIcon Symbol="Delete" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>
                                    </MenuFlyout>
                                </FlyoutBase.AttachedFlyout>
                                <i:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="RightTapped">
                                        <helpers:OpenFlyoutAction />
                                    </core:EventTriggerBehavior>
                                </i:Interaction.Behaviors>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <!--  XAML Elements  -->
                                <CheckBox
                                    Grid.Column="0"
                                    MinWidth="5"
                                    Margin="8,0,0,0"
                                    Command="{x:Bind vm:TaskViewModel.ItemCheckedCommand}"
                                    CommandParameter="{Binding}"
                                    IsChecked="{x:Bind is_complete, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <!--<SymbolIcon Grid.Column="0" Margin="8, 0, 0, 0" Symbol="Add" />-->
                                <TextBlock
                                    Grid.Column="1"
                                    Margin="0,10,0,10"
                                    Padding="15,0,0,0"
                                    Text="{x:Bind item_name}">
                                    <i:Interaction.Behaviors>
                                        <!--  When a Task is checked as complete, grey it out  -->
                                        <core:DataTriggerBehavior Binding="{x:Bind is_complete, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                            <core:ChangePropertyAction PropertyName="Foreground" Value="{ThemeResource ButtonForegroundThemeBrush}" />
                                        </core:DataTriggerBehavior>

                                        <core:DataTriggerBehavior Binding="{x:Bind is_complete, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <core:ChangePropertyAction PropertyName="Foreground" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}" />
                                        </core:DataTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>

                    <!--  Only way to make text block stretch  -->
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>

                <Grid
                    x:Name="NewTaskGrid"
                    Grid.Row="2"
                    Margin="8,8,8,8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBox
                        Grid.Column="0"
                        MaxHeight="33"
                        KeyDown="TextBox_KeyDown"
                        MaxLength="45"
                        PlaceholderText="New Task"
                        Style="{StaticResource TextBoxStyle1}"
                        Text="{x:Bind ViewModel.NewTaskName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        TextWrapping="NoWrap" />
                    <Button
                        Grid.Column="1"
                        Command="{x:Bind ViewModel.NewTaskCommand}"
                        CommandParameter="{x:Bind ViewModel.NewTaskName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <SymbolIcon Symbol="Add" />
                    </Button>

                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Page>
